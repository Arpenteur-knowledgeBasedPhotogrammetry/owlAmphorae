/**
 * Create a new graph and add elements to it
 * 
 * @author Pierre Drap, The University Of Aix-Marseille
 * @see	<a href="http://www.arpenteur.org/">http://www.arpenteur.org/</a>
 * 
 * @author Yaaqoub Semlali, The University Of Aix-Marseille
 * @see <a href="http://www.yaaqoubsemlali.com">http://www.yaaqoubsemlali.com</a>
 */
package edu.amu.nym.editor.model.graph;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.Vector;

import javax.swing.JPanel;

import org.graphstream.graph.Graph;
import org.graphstream.graph.implementations.AdjacencyListGraph;



public class GraphLauncher extends JPanel{

	/**
	 * 
	 */
	private static final long serialVersionUID = -658271052866531728L;
	
	private GraphAlgo graphAlgo = new GraphAlgo();

	//Create a new graph
	public static Graph graph = null;
	
	//Create an ArrayList that can store the graph nodes
	public static Vector<String> nodeStr = new Vector<String>();
	
	//To know if the individuals is loaded or no
	public static boolean isIndividualsLoaded = false;
	
		
	public GraphLauncher() {
	    System.setProperty("org.graphstream.ui.renderer", "org.graphstream.ui.j2dviewer.J2DGraphRenderer");

		setLayout(new BorderLayout());

		graph = new AdjacencyListGraph("Entity graph");
 		 
		graph.addAttribute("ui.stylesheet", "url('src/main/resources/GraphStyle.css')");
		graph.addAttribute("ui.quality");
		graph.addAttribute("ui.antialias");
   
		graphAlgo.addNodes(graph, nodeStr);

		graphAlgo.addRelations(graph, nodeStr);

        //display labels
		graphAlgo.displayLabels(graph);

        graph.setAutoCreate(true);
        graph.setStrict(false);
	}
}
